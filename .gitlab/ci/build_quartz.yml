##############################################################################
# Copyright (c) 2016-19, Lawrence Livermore National Security, LLC and Umpire
# project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
##############################################################################

####
# This is the share configuration of jobs for quartz

####
# In pre-build phase, allocate a node for builds
.quartz_common:
  tags:
    - shell
    - quartz
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /_qnone/ || $UMPIRE_CI_QUARTZ == "OFF"' #run except if ...
      when: never
    - if: '$CI_JOB_NAME =~ /release_resources/'
      when: always
    - when: on_success

####
# In pre-build phase, allocate a node for builds
allocate_resources_build_quartz:
  variables:
    GIT_STRATEGY: none
  extends: .quartz_common
  stage: q_allocate_resources
  script:
    - salloc -N 1 -c 36 -p pdebug -t 10 --no-shell --job-name=${UMPIRE_ALLOC_NAME}
  needs: ["start"]

####
# In post-build phase, deallocate resources
# Note : make sure this is run even on build phase failure
release_resources_build_quartz:
  variables:
    GIT_STRATEGY: none
  extends: .quartz_common
  stage: q_release_resources
  script:
    - export JOBID=$(squeue -h --name=${UMPIRE_ALLOC_NAME} --format=%A)
    - ([[ -n "${JOBID}" ]] && scancel ${JOBID})

####
# Generic qwartz build job, extending build script
.build_quartz:
  stage: q_build_and_test
  extends: [.quartz_common, .build_toss_3_x86_64_ib_script]

.build_quartz_advanced:
  extends: [.build_quartz, .advanced_pipeline]

####
# Generic qwartz test job, extending test script
.test_quartz:
  stage: q_build_and_test
  extends: [.quartz_common, .test_toss_3_x86_64_ib_script]

.test_quartz_advanced:
  extends: [.test_quartz, .advanced_pipeline]

####
# All Jobs
clang_3_9_1_Q_advanced 1 2:
  variables:
    COMPILER: "clang_3_9_1"
  extends: .build_quartz_advanced

clang_3_9_1_Q_advanced 2 2:
  variables:
    COMPILER: "clang_3_9_1"
  extends: .test_quartz_advanced
  needs: ["clang_3_9_1_Q_advanced 1 2"]


clang_4_0_0_Q 1 2:
  variables:
    COMPILER: "clang_4_0_0"
  extends: .build_quartz

clang_4_0_0_Q 2 2:
  variables:
    COMPILER: "clang_4_0_0"
  extends: .test_quartz
  needs: ["clang_4_0_0_Q 1 2"]


gcc_4_9_3_Q_advanced 1 2:
  variables:
    COMPILER: "gcc_4_9_3"
  extends: .build_quartz_advanced

gcc_4_9_3_Q_advanced 2 2:
  variables:
    COMPILER: "gcc_4_9_3"
  extends: .test_quartz_advanced
  needs: ["gcc_4_9_3_Q_advanced 1 2"]


gcc_6_1_0_Q_advanced 1 2:
  variables:
    COMPILER: "gcc_6_1_0"
  extends: .build_quartz_advanced

gcc_6_1_0_Q_advanced 2 2:
  variables:
    COMPILER: "gcc_6_1_0"
  extends: .test_quartz_advanced
  needs: ["gcc_6_1_0_Q_advanced 1 2"]


gcc_7_1_0_Q 1 2:
  variables:
    COMPILER: "gcc_7_1_0"
  extends: .build_quartz

gcc_7_1_0_Q 2 2:
  variables:
    COMPILER: "gcc_7_1_0"
  extends: .test_quartz
  needs: ["gcc_7_1_0_Q 1 2"]


cudatoolkit_9_1_Q 1 2:
  variables:
    COMPILER: "cudatoolkit_9_1"
  extends: .build_quartz

cudatoolkit_9_1_Q 2 2:
  variables:
    COMPILER: "cudatoolkit_9_1"
  extends: .test_quartz
  needs: ["cudatoolkit_9_1_Q 1 2"]


icpc_16_0_4_Q_advanced 1 2:
  variables:
    COMPILER: "icpc_16_0_4"
  extends: .build_quartz_advanced
  allow_failure: true

icpc_16_0_4_Q_advanced 2 2:
  variables:
    COMPILER: "icpc_16_0_4"
  extends: .test_quartz_advanced
  needs: ["icpc_16_0_4_Q_advanced 1 2"]
  allow_failure: true


icpc_17_0_2_Q_advanced 1 2:
  variables:
    COMPILER: "icpc_17_0_2"
  extends: .build_quartz_advanced

icpc_17_0_2_Q_advanced 2 2:
  variables:
    COMPILER: "icpc_17_0_2"
  extends: .test_quartz_advanced
  needs: ["icpc_17_0_2_Q_advanced 1 2"]


pgi_17_10_Q_advanced 1 2:
  variables:
    COMPILER: "pgi_17_10"
  extends: .build_quartz_advanced
  allow_failure: true

pgi_17_10_Q_advanced 2 2:
  variables:
    COMPILER: "pgi_17_10"
  extends: .test_quartz_advanced
  needs: ["pgi_17_10_Q_advanced 1 2"]
  allow_failure: true


pgi_18_5_Q 1 2:
  variables:
    COMPILER: "pgi_18_5"
  extends: .build_quartz
  allow_failure: true

pgi_18_5_Q 2 2:
  variables:
    COMPILER: "pgi_18_5"
  extends: .test_quartz
  needs: ["pgi_18_5_Q 1 2"]
  allow_failure: true
