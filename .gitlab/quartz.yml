##############################################################################
# Copyright (c) 2016-20, Lawrence Livermore National Security, LLC and Umpire
# project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
##############################################################################

####
# This is the share configuration of jobs for quartz

####
# In pre-build phase, allocate a node for builds
.on_quartz:
  tags:
    - shell
    - quartz
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /_qnone/ || $ON_QUARTZ == "OFF"' #run except if ...
      when: never
    - if: '$CI_JOB_NAME =~ /release_resources/'
      when: always
    - when: on_success

####
# In pre-build phase, allocate a node for builds
allocate_resources (on quartz):
  variables:
    GIT_STRATEGY: none
  extends: .on_quartz
  stage: q_allocate_resources
  script:
    - salloc -N 1 -c 36 -p pdebug -t 10 --no-shell --job-name=${ALLOC_NAME}
  needs: []

####
# In post-build phase, deallocate resources
# Note : make sure this is run even on build phase failure
release_resources (on quartz):
  variables:
    GIT_STRATEGY: none
  extends: .on_quartz
  stage: q_release_resources
  script:
    - export JOBID=$(squeue -h --name=${ALLOC_NAME} --format=%A)
    - ([[ -n "${JOBID}" ]] && scancel ${JOBID})

####
# Generic quartz build job, extending build script
.build_and_test_on_quartz:
  stage: q_build_and_test
  extends: [.build_toss_3_x86_64_ib_script, .on_quartz]

.build_and_test_on_quartz_advanced:
  extends: [.build_and_test_on_quartz, .advanced_pipeline]

####
# Quartz build jobs
clang_3_9_1 (build and test on quartz):
  variables:
    SPEC: "%clang@3.9.1"
  extends: .build_and_test_on_quartz_advanced

clang_4_0_0 (build and test on quartz):
  variables:
    SPEC: "%clang@4.0.0"
  extends: .build_and_test_on_quartz_advanced

clang_6_0_0 (build and test on quartz):
  variables:
    SPEC: "%clang@6.0.0"
  extends: .build_and_test_on_quartz_advanced

clang_9_0_0 (build and test on quartz):
  variables:
    SPEC: "%clang@9.0.0"
  extends: .build_and_test_on_quartz


gcc_4_9_3 (build and test on quartz):
  variables:
    SPEC: "%gcc@4.9.3"
  extends: .build_and_test_on_quartz_advanced

gcc_6_1_0 (build and test on quartz):
  variables:
    SPEC: "%gcc@6.1.0"
  extends: .build_and_test_on_quartz_advanced

gcc_7_1_0 (build and test on quartz):
  variables:
    SPEC: "%gcc@7.1.0"
  extends: .build_and_test_on_quartz_advanced

gcc_7_3_0 (build and test on quartz):
  variables:
    SPEC: "%gcc@7.3.0"
  extends: .build_and_test_on_quartz_advanced

gcc_8_1_0 (build and test on quartz):
  variables:
    SPEC: "%gcc@8.1.0"
  extends: .build_and_test_on_quartz


icpc_16_0_4 (build and test on quartz):
  variables:
    SPEC: "%intel@16.0.4"
  extends: .build_and_test_on_quartz_advanced
  allow_failure: true

icpc_17_0_2 (build and test on quartz):
  variables:
    SPEC: "%intel@17.0.2"
  extends: .build_and_test_on_quartz_advanced

icpc_18_0_0 (build and test on quartz):
  variables:
    SPEC: "%intel@18.0.0"
  extends: .build_and_test_on_quartz_advanced
  allow_failure: true

icpc_19_0_4 (build and test on quartz):
  variables:
    SPEC: "%intel@19.0.4"
  extends: .build_and_test_on_quartz


pgi_17_10 (build and test on quartz):
  variables:
    SPEC: "%pgi@17.10"
  extends: .build_and_test_on_quartz_advanced
  allow_failure: true

pgi_18_5 (build and test on quartz):
  variables:
    SPEC: "%pgi@18.5"
  extends: .build_and_test_on_quartz_advanced
  allow_failure: true

pgi_19_4 (build and test on quartz):
  variables:
    SPEC: "%pgi@19.4"
  extends: .build_and_test_on_quartz
  allow_failure: true
